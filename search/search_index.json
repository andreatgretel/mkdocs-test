{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Test Welcome to the Test project! I've added a sentence here to see if the pipeline is working. API Reference","title":"Test"},{"location":"#test","text":"Welcome to the Test project! I've added a sentence here to see if the pipeline is working. API Reference","title":"Test"},{"location":"api/","text":"API Reference SomeClass Source code in src/test/some_code.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class SomeClass (): def __init__ ( self , x : int ): \"\"\" SomeClass has many functionalities etc. Args: x (int): an integer. \"\"\" self . x = x def some_method ( self , y : int ): \"\"\" This method does something very important. Args: y (int): an integer. \"\"\" return self . x + y __init__ ( x ) SomeClass has many functionalities etc. Parameters: x ( int ) \u2013 an integer. Source code in src/test/some_code.py 2 3 4 5 6 7 8 9 10 def __init__ ( self , x : int ): \"\"\" SomeClass has many functionalities etc. Args: x (int): an integer. \"\"\" self . x = x some_method ( y ) This method does something very important. Parameters: y ( int ) \u2013 an integer. Source code in src/test/some_code.py 12 13 14 15 16 17 18 19 20 def some_method ( self , y : int ): \"\"\" This method does something very important. Args: y (int): an integer. \"\"\" return self . x + y","title":"API Reference"},{"location":"api/#api-reference","text":"","title":"API Reference"},{"location":"api/#test.some_code.SomeClass","text":"Source code in src/test/some_code.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class SomeClass (): def __init__ ( self , x : int ): \"\"\" SomeClass has many functionalities etc. Args: x (int): an integer. \"\"\" self . x = x def some_method ( self , y : int ): \"\"\" This method does something very important. Args: y (int): an integer. \"\"\" return self . x + y","title":"SomeClass"},{"location":"api/#test.some_code.SomeClass.__init__","text":"SomeClass has many functionalities etc. Parameters: x ( int ) \u2013 an integer. Source code in src/test/some_code.py 2 3 4 5 6 7 8 9 10 def __init__ ( self , x : int ): \"\"\" SomeClass has many functionalities etc. Args: x (int): an integer. \"\"\" self . x = x","title":"__init__"},{"location":"api/#test.some_code.SomeClass.some_method","text":"This method does something very important. Parameters: y ( int ) \u2013 an integer. Source code in src/test/some_code.py 12 13 14 15 16 17 18 19 20 def some_method ( self , y : int ): \"\"\" This method does something very important. Args: y (int): an integer. \"\"\" return self . x + y","title":"some_method"}]}